#!/bin/bash
# SPDX-License-Identifier: CC0-1.0
# SPDX-FileCopyrightText: 2021-2022 The Foundation for Public Code <info@publiccode.net>, https://standard.publiccode.net/AUTHORS

# This script is used to generate a PDF from the html generated by Jekyll.
# This script is used during the release process (see ../docs/releasing.md)

# if a parameter is passed to the script, then it will be used as the
# pre-release identifier
if [ "_${1}_" != "__" ]; then
PRE_RELEASE_ID="-${1}"
else
PRE_RELEASE_ID=""
fi

function weasyprint_version() {
	weasyprint --version \
		| sed -e's/[^0-9]*\([0-9\.]*\).*/\1/'
}

function temp_weasyprint_info() {
	if [ $TMP_WEASYPRINT -gt 0 ]; then
		WEASY_PRINT_VER=$(weasyprint_version)
		echo "================================================="
		echo "temp WeasyPrint installed, version $WEASY_PRINT_VER"
		echo "to use this version outside of this script,"
		echo "type the following command:"
		echo
		echo "$ source /tmp/weasyprint/venv/bin/activate"
		echo "================================================="
	fi
}

function ensure_good_weasyprint () {
	WEASY_PRINT_VER=$(weasyprint_version)
	echo "WEASY_PRINT_VER='$WEASY_PRINT_VER'"

	if [ "_${WEASY_PRINT_VER}_" != "__" ]; then
		MAJ_VER=$(echo "${WEASY_PRINT_VER}" | cut -f1 -d'.')
		MIN__VER=$(echo "${WEASY_PRINT_VER}" | cut -f2 -d'.')
	else
		MAJ_VER=0
		MIN_VER=0
	fi

	if [ "$MAJ_VER" -lt 57 ]; then
		echo "WeasyPrint version: $WEASY_PRINT_VER less than 57"
	        echo "installing new weasyprint"
		pushd /tmp
		rm -rf weasyprint
		git clone https://github.com/Kozea/WeasyPrint.git weasyprint
		cd weasyprint
		python3 -m venv venv
	        source venv/bin/activate
	        pip install weasyprint
		TMP_WEASYPRINT=1
		echo
		temp_weasyprint_info
		echo
		popd
	fi
	if [ "_${TMP_WEASYPRINT}_" == "__" ]; then
		TMP_WEASYPRINT=0
	fi
}
ensure_good_weasyprint

# grep to extract version line from _config.yml,
# cut to take just the content after the colon
# xargs to strip the leading space
# and add the pre-release-identifier if any
VERSION=$(grep version _config.yml | cut -f2 -d':' | xargs)$PRE_RELEASE_ID;

JEKYLL_PDF_PORT=9000
JEKYLL_PDF_DIR=_build_pdf
rm -rf $JEKYLL_PDF_DIR

PAGES_REPO_NWO=publiccodenet/release-test \
	bundle exec jekyll serve \
		--port=$JEKYLL_PDF_PORT \
		--destination=$JEKYLL_PDF_DIR &
JEKYLL_PID=$!
function cleanup() {
	echo "Killing JEKYLL_PID: $JEKYLL_PID"
	kill $JEKYLL_PID
}
trap cleanup EXIT # stop the jekyll serve

MAX_LOOPS=100
LOOPS=0
while ! curl "http://localhost:$JEKYLL_PDF_PORT" >/dev/null 2>&1 ; do
	LOOPS=$(( $LOOPS + 1 ));
	echo "try $LOOPS, waiting to connect ..."
	sleep 1;
	if [ $LOOPS -gt $MAX_LOOPS ]; then
		echo "exceeds MAX_LOOPS";
		exit 1;
	fi
done

# give it one more second
sleep 1;

weasyprint --presentational-hints \
	"http://localhost:$JEKYLL_PDF_PORT/index.html" \
	release-test-$VERSION.pdf
ls -l release-test-$VERSION.pdf

temp_weasyprint_info

pandoc _build_pdf/index.html -o release-test-$VERSION.epub

echo "done"
